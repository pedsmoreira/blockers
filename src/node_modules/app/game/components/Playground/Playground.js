import {observer} from "mobx-react";
import React from "react";

import Matrix from "app/game/Matrix";
import type {Position} from "app/game/Matrix";
import Piece from "app/game/Piece";
import Effect from "app/game/Effect";

import PlaygroundGrid from "app/game/components/PlaygroundGrid/PlaygroundGrid";
import MatrixComponent from "app/game/components/Matrix/Matrix";
import Effects from "app/game/components/Effects/Effects";

import "./Playground.scss";

const blockSize = 24;

@observer
export default class Playground extends React.PureComponent {
    _lastPiecePosition: Position = {};

    propsTypes: {
        matrix: Matrix,
        piece: Piece,
        piecePosition: Position,
        effects: Effect[]
    };

    render() {
        const rows = this.props.matrix.rows();
        const cols = this.props.matrix.cols();

        const pieceMatrixLeft = this.props.piecePosition.x * blockSize + 'px';
        const pieceMatrixTop = this.props.piecePosition.y * blockSize + 'px';

        return (
            <div className="Playground" style={{width: `${cols * blockSize}px`, height: `${rows * blockSize}px`}}>
                <div className="Playground-background"/>
                <PlaygroundGrid rows={rows} cols={cols}/>

                <MatrixComponent matrix={this.props.matrix} blockSize={blockSize}/>
                <MatrixComponent key={this.props.piece.id} matrix={this.props.piece} blockSize={blockSize}
                                 style={{left: pieceMatrixLeft, top: pieceMatrixTop}}/>

                <Effects effects={this.props.effects} blockSize={blockSize}/>
            </div>
        )
    }
}
