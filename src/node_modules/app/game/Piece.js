// @flow

import Block from "app/game/Block";
import Matrix from "app/game/Matrix";

import pieceTypes from "app/constants/pieceTypes";
import pieceColors from "app/constants/pieceColors";

class Piece {
    type: string;
    matrix: Matrix<Block>;

    constructor(type: string) {
        this.type = type;

        let color = this.color();
        let typeMatrix = pieceTypes[this.type];

        this.matrix = new Matrix(Matrix.rows(typeMatrix), Matrix.cols(typeMatrix));
        Matrix.eachValue(typeMatrix, (_, x, y) => this.matrix.set({x, y}, new Block(this, color)));
    }

    color(): any {
        return pieceColors[this.typeIndex()];
    }

    typeIndex(): number {
        return Object.keys(pieceTypes).indexOf(this.type);
    }

    detachBlocks() {
        this.matrix.eachValue((block: Block) => block.detach());
    }

    static randomType(): number {
        return Math.floor(Math.random() * Object.keys(pieceTypes).length);
    }

    static random(): this {
        return new this(Object.keys(pieceTypes)[this.randomType()]);
    }
}

export default Piece;
