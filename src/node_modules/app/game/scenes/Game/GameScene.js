import {observer} from "mobx-react";
import React from "react";

import * as gameModes from "app/constants/gameModes";

import GameStore from "app/stores/GameStore";
import SceneStore from "app/stores/SceneStore";

import Playground from "app/game/components/Playground/Playground";
import CharacterMenu from "app/game/components/CharacterMenu/CharacterMenu";
import StageMenu from "app/game/components/StageMenu/StageMenu";
import ScoreMenu from "app/game/components/ScoreMenu/ScoreMenu";
import SpellsMenu from "app/game/components/SpellsMenu/SpellsMenu";

import music from "app/sounds/game.mp3";
import "./GameScene.scss";

@observer
export default class GameScene extends React.PureComponent {
    componentWillMount() {
        SceneStore.setBackground(GameStore.stageClass.background);
        SceneStore.setMusic(music);
        GameStore.play();
    }

    render() {
        return (
            <div className="GameScene">
                <div className="container">
                    <div className="GameScene-left-menu">
                        <CharacterMenu character={GameStore.character}/>
                        <SpellsMenu spells={GameStore.character.spells}/>
                    </div>

                    <div className="GameScene-playing-field">
                        <Playground matrix={GameStore.matrix}
                                    piece={GameStore.piece}
                                    piecePosition={GameStore.piecePosition}
                                    effects={GameStore.effects}/>

                        <div style={{position: 'absolute', top: 16, left: 16}}>
                            <div>X: {GameStore.piecePosition.x}</div>
                            <div>Y: {GameStore.piecePosition.y}</div>
                        </div>
                    </div>

                    <div className="GameScene-right-menu">
                        <StageMenu stage={GameStore.stage} mode={GameStore.mode}/>
                        {GameStore.mode != gameModes.SURVIVAL ? null :
                            <ScoreMenu experience={GameStore.character.experience} speed={GameStore.speed}/>
                        }
                    </div>
                </div>
            </div>
        )
    }
}
