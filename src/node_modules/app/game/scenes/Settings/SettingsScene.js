// @flow

import {observer} from "mobx-react";
import React from "react";

import ConfigStore from "app/stores/ConfigStore";
import SceneStore from "app/stores/SceneStore";

import "./SettingsScene.scss";

@observer
export default class SettingsScene extends React.PureComponent {
    state: {
        fxVolume: number,
        musicVolume: number,
        mute: boolean
    };

    constructor(props: any) {
        super(props);
    }

    handleFxVolume(event: SyntheticInputEvent) {
        ConfigStore.setFxVolume(parseInt(event.target.value) / 100);
    }

    handleMusicVolume(event: SyntheticInputEvent) {
        ConfigStore.setMusicVolume(parseInt(event.target.value) / 100);
    }

    handleMute() {
        ConfigStore.setMute(!ConfigStore.mute)
    }

    handleDone() {
        SceneStore.setModalScene();
    }

    render() {
        const mute = ConfigStore.mute;

        return (
            <div className="SettingsScene">
                <header>
                    <h1 className="SettingsScene-title">
                        <i className="fa fa-cog"/> Settings
                    </h1>
                </header>

                <form className="form-inline">
                    <div className="form-group">
                        <label htmlFor="SettingsScene-fxVolume" className="label-control">
                            <i className="fa fa-headphones"/> FX Volume
                        </label>

                        <input
                            type="range"
                            min="0"
                            max="100"
                            step="1"
                            className="form-control"
                            value={ConfigStore.fxVolume * 100}
                            onChange={this.handleFxVolume.bind(this)}
                        />
                    </div>

                    <div className="form-group">
                        <label htmlFor="SettingsScene-musicVolume" className="label-control">
                            <i className="fa fa-music"/> Music Volume
                        </label>

                        <input
                            type="range"
                            min="0"
                            max="100"
                            step="1"
                            className="form-control"
                            value={ConfigStore.musicVolume * 100}
                            onChange={this.handleMusicVolume.bind(this)}
                        />
                    </div>
                </form>

                <footer>
                    <button
                        type="button"
                        className="SettingsScene-done"
                        onClick={this.handleDone.bind(this)}>
                        <i className="fa fa-check"/> Done
                    </button>

                    <button type="button"
                            onClick={this.handleMute.bind(this)}
                    >
                        <i className={'fa fa-' + (mute ? 'volume-off' : 'volume-up')}/>
                        {mute ? 'Unmute' : 'Mute'}
                    </button>
                </footer>
            </div>
        )
    }
}
