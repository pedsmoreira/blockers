import * as formulas from "app/constants/formulas";
import {MAX_DIFFICULTY} from "app/constants/properties";

export type DifficultyLevel = {
    level: number,
    type: string,
    linesCleared: number,
    linesClearedTare: number,
    linesClearedIncrease: number,
    progress: Function
};

export const DIFFICULTY_LEVELS: DifficultyLevel[] = (() => {
    const difficultyLevelTypes = [0, 0, 0, 1, 1, 1, 2, 2, 3, 3];
    const difficultyTypes = ['easy', 'medium', 'hard', 'insane'];
    let tare = 0;

    const progress = (tare: number, increase: number) => {
        return (linesCleared) => {
            if (increase === 0) return 100;
            if (linesCleared <= tare) return 0;
            return Math.min(100, (linesCleared - tare) * 100 / increase);
        };
    };

    return Array(MAX_DIFFICULTY + 1).fill(0).map((_, index) => {
        const linesCleared = formulas.difficultyLines(index);
        const linesClearedIncrease = linesCleared - tare;

        const result = {
            level: index,
            type: difficultyTypes[difficultyLevelTypes[index]],
            linesCleared: linesCleared,
            linesClearedTare: tare,
            linesClearedIncrease: linesClearedIncrease,
            progress: progress(tare, linesClearedIncrease)
        };

        tare = result.linesCleared;

        return result;
    });
})();

console.log(DIFFICULTY_LEVELS);
