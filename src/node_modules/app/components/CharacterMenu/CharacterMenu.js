// @flow

import {observer} from "mobx-react";
import React from "react";
import {Circle as ProgressBar} from "react-progressbar.js";
import Character from "app/models/Character";
import {MAX_LEVEL} from "app/constants/properties";
import * as formulas from "app/constants/formulas";
import CharacterPortrait from "app/components/CharacterPortrait/CharacterPortrait";
import CharacterBar from "app/components/CharacterBar/CharacterBar";
import "./CharacterMenu.scss";

@observer
export default class CharacterMenu extends React.PureComponent {
    props: {
        character: Character
    };

    render() {
        const character = this.props.character;
        const currentLevelExperience = formulas.levelExperience(character.level);
        const nextLevelExperience = formulas.levelExperience(character.level + 1);
        const progress = character.level === MAX_LEVEL ? 1 :
            (character.experience - currentLevelExperience) / (nextLevelExperience - currentLevelExperience);

        return (
            <div className="CharacterMenu">
                <header className="clearfix">
                    <div className="CharacterMenu-portrait-group">
                        <CharacterPortrait character={character}/>
                        <div className="CharacterMenu-progress">
                            <ProgressBar progress={progress} options={{strokeWidth: 4, color: '#6C6'}}
                                         containerStyle={{width: '100%'}} containerClass="CharacterMenu-progress"/>
                        </div>
                    </div>

                    <div className="CharacterMenu-title">{character.constructor.title}</div>
                    <div className="CharacterMenu-level">Level {character.level}</div>
                </header>

                <CharacterBar title="Mana" icon="flask" value={character.mana} max={character.maxMana} color="#33F"/>
            </div>
        )
    }
}
