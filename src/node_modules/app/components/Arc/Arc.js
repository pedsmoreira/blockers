// @flow

import {observer} from "mobx-react";
import React from "react";

@observer
export default class Arc extends React.PureComponent {
    props: {
        percentage: number,
        radius: number,
        fill?: any,
        stroke?: any,
        strokeWidth?: any
    };

    static polarToCartesian(centerX, centerY, radius, angleInDegrees) {
        const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;

        return {
            x: centerX + (radius * Math.cos(angleInRadians)),
            y: centerY + (radius * Math.sin(angleInRadians))
        };
    }

    static describeArc(x, y, radius, startAngle, endAngle) {

        const start = this.polarToCartesian(x, y, radius, endAngle);
        const end = this.polarToCartesian(x, y, radius, startAngle);

        const largeArcFlag = endAngle - startAngle <= 180 ? "0" : "1";

        return [
            "M", start.x, start.y,
            "A", radius, radius, 0, largeArcFlag, 0, end.x, end.y
        ].join(" ");
    }

    render() {
        const radius = this.props.radius;
        const fill = this.props.fill || 'none';
        const stroke = this.props.stroke || 'black';
        const strokeWidth = this.props.strokeWidth || 10;

        const d = this.constructor.describeArc(radius, radius, radius, 0, this.props.percentage * 3.6);
        return (
            <svg className="Arc">
                <path fill={fill} stroke={stroke} strokeWidth={strokeWidth} d={d}/>
            </svg>
        )
    }
}

