import {computed, observable} from "mobx";

export default class Spell {
    static title: string;
    static passiveDescription: string;
    static castDescription: string;

    static widget: boolean = false;
    static icon: string;

    static castable: boolean = false;
    static cooldowns: number[];
    static costs: number[];

    @observable level: number = 1;
    @observable lastCast: number;

    cast() {
        this.lastCast = new Date().getTime();
    }

    onCast() {
        throw new Error('Undefined onCast method');
    }

    @computed get cooldown(): number {
        return this.constructor.cooldowns[this.level - 1];
    }

    @computed get cost(): number {
        return this.constructor.costs[this.level - 1];
    }

    canCast(timestamp: number = new Date().getTime()): boolean {
        return this.constructor.castable && (this.lastCast + this.cooldown) > timestamp;
    }
}
